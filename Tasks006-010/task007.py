def gen1(s):    k = 0    while True:        yield s ** k        k += 1def gen2(s):    for i in str(s):        if int(i) % 2 == 0:            yield int(i)def prime_number_checking(x):    if x == 1:        return False    counter = True    i = 2    while counter and i <= x // 2:        if x % i == 0:            counter = False        i += 1    if counter:        return True    return Falsedef gen3(s):    for i in range(2, s):        if prime_number_checking(i):            yield idef gen4(s):    for k in range(2, s):        number = k        multipliers = []        while not prime_number_checking(number):            for i in gen3(number):                if number % i == 0:                    multipliers.append(i)                    number = number // i                    break        multipliers.append(number)        counter = True        for i in multipliers:            if str(i) not in str(s):                counter = False        if counter:            yield kif __name__ == '__main__':    gen = gen1(5)    print(next(gen))    print(next(gen))    print(next(gen))    for i in gen2(289005):        print(i)    for i in gen3(20):        print(i)    for i in gen4(23):        print(i)